#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALTW_TL_BanLaptop.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LTW_BANLAPTOP_DOAN")]
	public partial class DB_BanLaptopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIETDONHANG(CHITIETDONHANG instance);
    partial void UpdateCHITIETDONHANG(CHITIETDONHANG instance);
    partial void DeleteCHITIETDONHANG(CHITIETDONHANG instance);
    partial void InsertTINTUC(TINTUC instance);
    partial void UpdateTINTUC(TINTUC instance);
    partial void DeleteTINTUC(TINTUC instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertHANGMAY(HANGMAY instance);
    partial void UpdateHANGMAY(HANGMAY instance);
    partial void DeleteHANGMAY(HANGMAY instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLAPTOP(LAPTOP instance);
    partial void UpdateLAPTOP(LAPTOP instance);
    partial void DeleteLAPTOP(LAPTOP instance);
    partial void InsertLOAITIN(LOAITIN instance);
    partial void UpdateLOAITIN(LOAITIN instance);
    partial void DeleteLOAITIN(LOAITIN instance);
    partial void InsertNHASX(NHASX instance);
    partial void UpdateNHASX(NHASX instance);
    partial void DeleteNHASX(NHASX instance);
    partial void InsertTINHTRANGMAY(TINHTRANGMAY instance);
    partial void UpdateTINHTRANGMAY(TINHTRANGMAY instance);
    partial void DeleteTINHTRANGMAY(TINHTRANGMAY instance);
    #endregion
		
		public DB_BanLaptopDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LTW_BANLAPTOP_DOANConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB_BanLaptopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_BanLaptopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_BanLaptopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_BanLaptopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this.GetTable<CHITIETDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<TINTUC> TINTUCs
		{
			get
			{
				return this.GetTable<TINTUC>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<HANGMAY> HANGMAYs
		{
			get
			{
				return this.GetTable<HANGMAY>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LAPTOP> LAPTOPs
		{
			get
			{
				return this.GetTable<LAPTOP>();
			}
		}
		
		public System.Data.Linq.Table<LOAITIN> LOAITINs
		{
			get
			{
				return this.GetTable<LOAITIN>();
			}
		}
		
		public System.Data.Linq.Table<NHASX> NHASXes
		{
			get
			{
				return this.GetTable<NHASX>();
			}
		}
		
		public System.Data.Linq.Table<TINHTRANGMAY> TINHTRANGMAYs
		{
			get
			{
				return this.GetTable<TINHTRANGMAY>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDONHANG")]
	public partial class CHITIETDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADH;
		
		private int _MALAP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _DONGIA;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<LAPTOP> _LAPTOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(int value);
    partial void OnMADHChanged();
    partial void OnMALAPChanging(int value);
    partial void OnMALAPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CHITIETDONHANG()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._LAPTOP = default(EntityRef<LAPTOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALAP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALAP
		{
			get
			{
				return this._MALAP;
			}
			set
			{
				if ((this._MALAP != value))
				{
					if (this._LAPTOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALAPChanging(value);
					this.SendPropertyChanging();
					this._MALAP = value;
					this.SendPropertyChanged("MALAP");
					this.OnMALAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_DONHANG", ThisKey="MADH", OtherKey="MADH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MADH = value.MADH;
					}
					else
					{
						this._MADH = default(int);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAPTOP_CHITIETDONHANG", Storage="_LAPTOP", ThisKey="MALAP", OtherKey="MALAP", IsForeignKey=true)]
		public LAPTOP LAPTOP
		{
			get
			{
				return this._LAPTOP.Entity;
			}
			set
			{
				LAPTOP previousValue = this._LAPTOP.Entity;
				if (((previousValue != value) 
							|| (this._LAPTOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAPTOP.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._LAPTOP.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MALAP = value.MALAP;
					}
					else
					{
						this._MALAP = default(int);
					}
					this.SendPropertyChanged("LAPTOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINTUC")]
	public partial class TINTUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATIN;
		
		private string _TIEUDETIN;
		
		private string _NOIDUNG;
		
		private System.Nullable<System.DateTime> _NGAYDANG;
		
		private string _ANHTIN;
		
		private System.Nullable<int> _MLTIN;
		
		private EntityRef<LOAITIN> _LOAITIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATINChanging(int value);
    partial void OnMATINChanged();
    partial void OnTIEUDETINChanging(string value);
    partial void OnTIEUDETINChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnNGAYDANGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDANGChanged();
    partial void OnANHTINChanging(string value);
    partial void OnANHTINChanged();
    partial void OnMLTINChanging(System.Nullable<int> value);
    partial void OnMLTINChanged();
    #endregion
		
		public TINTUC()
		{
			this._LOAITIN = default(EntityRef<LOAITIN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATIN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATIN
		{
			get
			{
				return this._MATIN;
			}
			set
			{
				if ((this._MATIN != value))
				{
					this.OnMATINChanging(value);
					this.SendPropertyChanging();
					this._MATIN = value;
					this.SendPropertyChanged("MATIN");
					this.OnMATINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEUDETIN", DbType="NVarChar(700)")]
		public string TIEUDETIN
		{
			get
			{
				return this._TIEUDETIN;
			}
			set
			{
				if ((this._TIEUDETIN != value))
				{
					this.OnTIEUDETINChanging(value);
					this.SendPropertyChanging();
					this._TIEUDETIN = value;
					this.SendPropertyChanged("TIEUDETIN");
					this.OnTIEUDETINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(700)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDANG", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYDANG
		{
			get
			{
				return this._NGAYDANG;
			}
			set
			{
				if ((this._NGAYDANG != value))
				{
					this.OnNGAYDANGChanging(value);
					this.SendPropertyChanging();
					this._NGAYDANG = value;
					this.SendPropertyChanged("NGAYDANG");
					this.OnNGAYDANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHTIN", DbType="NVarChar(200)")]
		public string ANHTIN
		{
			get
			{
				return this._ANHTIN;
			}
			set
			{
				if ((this._ANHTIN != value))
				{
					this.OnANHTINChanging(value);
					this.SendPropertyChanging();
					this._ANHTIN = value;
					this.SendPropertyChanged("ANHTIN");
					this.OnANHTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLTIN", DbType="Int")]
		public System.Nullable<int> MLTIN
		{
			get
			{
				return this._MLTIN;
			}
			set
			{
				if ((this._MLTIN != value))
				{
					if (this._LOAITIN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMLTINChanging(value);
					this.SendPropertyChanging();
					this._MLTIN = value;
					this.SendPropertyChanged("MLTIN");
					this.OnMLTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITIN_TINTUC", Storage="_LOAITIN", ThisKey="MLTIN", OtherKey="MLTIN", IsForeignKey=true)]
		public LOAITIN LOAITIN
		{
			get
			{
				return this._LOAITIN.Entity;
			}
			set
			{
				LOAITIN previousValue = this._LOAITIN.Entity;
				if (((previousValue != value) 
							|| (this._LOAITIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITIN.Entity = null;
						previousValue.TINTUCs.Remove(this);
					}
					this._LOAITIN.Entity = value;
					if ((value != null))
					{
						value.TINTUCs.Add(this);
						this._MLTIN = value.MLTIN;
					}
					else
					{
						this._MLTIN = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAITIN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADH;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private string _DATHANHTOAN;
		
		private string _TINHTRANGGIAO;
		
		private System.Nullable<int> _MAKH;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(int value);
    partial void OnMADHChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnDATHANHTOANChanging(string value);
    partial void OnDATHANHTOANChanged();
    partial void OnTINHTRANGGIAOChanging(string value);
    partial void OnTINHTRANGGIAOChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    #endregion
		
		public DONHANG()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATHANHTOAN", DbType="NVarChar(20)")]
		public string DATHANHTOAN
		{
			get
			{
				return this._DATHANHTOAN;
			}
			set
			{
				if ((this._DATHANHTOAN != value))
				{
					this.OnDATHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._DATHANHTOAN = value;
					this.SendPropertyChanged("DATHANHTOAN");
					this.OnDATHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANGGIAO", DbType="NVarChar(50)")]
		public string TINHTRANGGIAO
		{
			get
			{
				return this._TINHTRANGGIAO;
			}
			set
			{
				if ((this._TINHTRANGGIAO != value))
				{
					this.OnTINHTRANGGIAOChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANGGIAO = value;
					this.SendPropertyChanged("TINHTRANGGIAO");
					this.OnTINHTRANGGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MADH", OtherKey="MADH")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANGMAY")]
	public partial class HANGMAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHANG;
		
		private string _TENHANG;
		
		private EntitySet<LAPTOP> _LAPTOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHANGChanging(int value);
    partial void OnMAHANGChanged();
    partial void OnTENHANGChanging(string value);
    partial void OnTENHANGChanged();
    #endregion
		
		public HANGMAY()
		{
			this._LAPTOPs = new EntitySet<LAPTOP>(new Action<LAPTOP>(this.attach_LAPTOPs), new Action<LAPTOP>(this.detach_LAPTOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHANG", DbType="NVarChar(50)")]
		public string TENHANG
		{
			get
			{
				return this._TENHANG;
			}
			set
			{
				if ((this._TENHANG != value))
				{
					this.OnTENHANGChanging(value);
					this.SendPropertyChanging();
					this._TENHANG = value;
					this.SendPropertyChanged("TENHANG");
					this.OnTENHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGMAY_LAPTOP", Storage="_LAPTOPs", ThisKey="MAHANG", OtherKey="MAHANG")]
		public EntitySet<LAPTOP> LAPTOPs
		{
			get
			{
				return this._LAPTOPs;
			}
			set
			{
				this._LAPTOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LAPTOPs(LAPTOP entity)
		{
			this.SendPropertyChanging();
			entity.HANGMAY = this;
		}
		
		private void detach_LAPTOPs(LAPTOP entity)
		{
			this.SendPropertyChanging();
			entity.HANGMAY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _GIOITINH;
		
		private System.Nullable<int> _DIENTHOAI;
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private string _EMAIL;
		
		private string _DIACHI;
		
		private string _PHANQUYEN;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnDIENTHOAIChanging(System.Nullable<int> value);
    partial void OnDIENTHOAIChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnPHANQUYENChanging(string value);
    partial void OnPHANQUYENChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(3)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI", DbType="Int")]
		public System.Nullable<int> DIENTHOAI
		{
			get
			{
				return this._DIENTHOAI;
			}
			set
			{
				if ((this._DIENTHOAI != value))
				{
					this.OnDIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI = value;
					this.SendPropertyChanged("DIENTHOAI");
					this.OnDIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="NVarChar(30)")]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(10)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(30)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHANQUYEN", DbType="VarChar(30)")]
		public string PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN;
			}
			set
			{
				if ((this._PHANQUYEN != value))
				{
					this.OnPHANQUYENChanging(value);
					this.SendPropertyChanging();
					this._PHANQUYEN = value;
					this.SendPropertyChanged("PHANQUYEN");
					this.OnPHANQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_DONHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAPTOP")]
	public partial class LAPTOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALAP;
		
		private string _TENLAP;
		
		private System.Nullable<int> _MATINHTRANG;
		
		private System.Nullable<double> _GIABAN;
		
		private string _MOTA;
		
		private System.Nullable<System.DateTime> _NGAYCAPNHAT;
		
		private string _ANHBIA;
		
		private System.Nullable<int> _SOLUONGTON;
		
		private System.Nullable<int> _MAHANG;
		
		private System.Nullable<int> _MANSX;
		
		private System.Nullable<int> _MOI;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntityRef<HANGMAY> _HANGMAY;
		
		private EntityRef<NHASX> _NHASX;
		
		private EntityRef<TINHTRANGMAY> _TINHTRANGMAY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALAPChanging(int value);
    partial void OnMALAPChanged();
    partial void OnTENLAPChanging(string value);
    partial void OnTENLAPChanged();
    partial void OnMATINHTRANGChanging(System.Nullable<int> value);
    partial void OnMATINHTRANGChanged();
    partial void OnGIABANChanging(System.Nullable<double> value);
    partial void OnGIABANChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnNGAYCAPNHATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYCAPNHATChanged();
    partial void OnANHBIAChanging(string value);
    partial void OnANHBIAChanged();
    partial void OnSOLUONGTONChanging(System.Nullable<int> value);
    partial void OnSOLUONGTONChanged();
    partial void OnMAHANGChanging(System.Nullable<int> value);
    partial void OnMAHANGChanged();
    partial void OnMANSXChanging(System.Nullable<int> value);
    partial void OnMANSXChanged();
    partial void OnMOIChanging(System.Nullable<int> value);
    partial void OnMOIChanged();
    #endregion
		
		public LAPTOP()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._HANGMAY = default(EntityRef<HANGMAY>);
			this._NHASX = default(EntityRef<NHASX>);
			this._TINHTRANGMAY = default(EntityRef<TINHTRANGMAY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALAP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALAP
		{
			get
			{
				return this._MALAP;
			}
			set
			{
				if ((this._MALAP != value))
				{
					this.OnMALAPChanging(value);
					this.SendPropertyChanging();
					this._MALAP = value;
					this.SendPropertyChanged("MALAP");
					this.OnMALAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLAP", DbType="NVarChar(50)")]
		public string TENLAP
		{
			get
			{
				return this._TENLAP;
			}
			set
			{
				if ((this._TENLAP != value))
				{
					this.OnTENLAPChanging(value);
					this.SendPropertyChanging();
					this._TENLAP = value;
					this.SendPropertyChanged("TENLAP");
					this.OnTENLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATINHTRANG", DbType="Int")]
		public System.Nullable<int> MATINHTRANG
		{
			get
			{
				return this._MATINHTRANG;
			}
			set
			{
				if ((this._MATINHTRANG != value))
				{
					if (this._TINHTRANGMAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._MATINHTRANG = value;
					this.SendPropertyChanged("MATINHTRANG");
					this.OnMATINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Float")]
		public System.Nullable<double> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(50)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYCAPNHAT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYCAPNHAT
		{
			get
			{
				return this._NGAYCAPNHAT;
			}
			set
			{
				if ((this._NGAYCAPNHAT != value))
				{
					this.OnNGAYCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGAYCAPNHAT = value;
					this.SendPropertyChanged("NGAYCAPNHAT");
					this.OnNGAYCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHBIA", DbType="NVarChar(200)")]
		public string ANHBIA
		{
			get
			{
				return this._ANHBIA;
			}
			set
			{
				if ((this._ANHBIA != value))
				{
					this.OnANHBIAChanging(value);
					this.SendPropertyChanging();
					this._ANHBIA = value;
					this.SendPropertyChanged("ANHBIA");
					this.OnANHBIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGTON", DbType="Int")]
		public System.Nullable<int> SOLUONGTON
		{
			get
			{
				return this._SOLUONGTON;
			}
			set
			{
				if ((this._SOLUONGTON != value))
				{
					this.OnSOLUONGTONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGTON = value;
					this.SendPropertyChanged("SOLUONGTON");
					this.OnSOLUONGTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="Int")]
		public System.Nullable<int> MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					if (this._HANGMAY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANSX", DbType="Int")]
		public System.Nullable<int> MANSX
		{
			get
			{
				return this._MANSX;
			}
			set
			{
				if ((this._MANSX != value))
				{
					if (this._NHASX.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANSXChanging(value);
					this.SendPropertyChanging();
					this._MANSX = value;
					this.SendPropertyChanged("MANSX");
					this.OnMANSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOI", DbType="Int")]
		public System.Nullable<int> MOI
		{
			get
			{
				return this._MOI;
			}
			set
			{
				if ((this._MOI != value))
				{
					this.OnMOIChanging(value);
					this.SendPropertyChanging();
					this._MOI = value;
					this.SendPropertyChanged("MOI");
					this.OnMOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAPTOP_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MALAP", OtherKey="MALAP")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGMAY_LAPTOP", Storage="_HANGMAY", ThisKey="MAHANG", OtherKey="MAHANG", IsForeignKey=true)]
		public HANGMAY HANGMAY
		{
			get
			{
				return this._HANGMAY.Entity;
			}
			set
			{
				HANGMAY previousValue = this._HANGMAY.Entity;
				if (((previousValue != value) 
							|| (this._HANGMAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGMAY.Entity = null;
						previousValue.LAPTOPs.Remove(this);
					}
					this._HANGMAY.Entity = value;
					if ((value != null))
					{
						value.LAPTOPs.Add(this);
						this._MAHANG = value.MAHANG;
					}
					else
					{
						this._MAHANG = default(Nullable<int>);
					}
					this.SendPropertyChanged("HANGMAY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASX_LAPTOP", Storage="_NHASX", ThisKey="MANSX", OtherKey="MANSX", IsForeignKey=true)]
		public NHASX NHASX
		{
			get
			{
				return this._NHASX.Entity;
			}
			set
			{
				NHASX previousValue = this._NHASX.Entity;
				if (((previousValue != value) 
							|| (this._NHASX.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHASX.Entity = null;
						previousValue.LAPTOPs.Remove(this);
					}
					this._NHASX.Entity = value;
					if ((value != null))
					{
						value.LAPTOPs.Add(this);
						this._MANSX = value.MANSX;
					}
					else
					{
						this._MANSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHASX");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTRANGMAY_LAPTOP", Storage="_TINHTRANGMAY", ThisKey="MATINHTRANG", OtherKey="MATINHTRANG", IsForeignKey=true)]
		public TINHTRANGMAY TINHTRANGMAY
		{
			get
			{
				return this._TINHTRANGMAY.Entity;
			}
			set
			{
				TINHTRANGMAY previousValue = this._TINHTRANGMAY.Entity;
				if (((previousValue != value) 
							|| (this._TINHTRANGMAY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTRANGMAY.Entity = null;
						previousValue.LAPTOPs.Remove(this);
					}
					this._TINHTRANGMAY.Entity = value;
					if ((value != null))
					{
						value.LAPTOPs.Add(this);
						this._MATINHTRANG = value.MATINHTRANG;
					}
					else
					{
						this._MATINHTRANG = default(Nullable<int>);
					}
					this.SendPropertyChanged("TINHTRANGMAY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.LAPTOP = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.LAPTOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAITIN")]
	public partial class LOAITIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MLTIN;
		
		private string _TLTIN;
		
		private EntitySet<TINTUC> _TINTUCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMLTINChanging(int value);
    partial void OnMLTINChanged();
    partial void OnTLTINChanging(string value);
    partial void OnTLTINChanged();
    #endregion
		
		public LOAITIN()
		{
			this._TINTUCs = new EntitySet<TINTUC>(new Action<TINTUC>(this.attach_TINTUCs), new Action<TINTUC>(this.detach_TINTUCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLTIN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MLTIN
		{
			get
			{
				return this._MLTIN;
			}
			set
			{
				if ((this._MLTIN != value))
				{
					this.OnMLTINChanging(value);
					this.SendPropertyChanging();
					this._MLTIN = value;
					this.SendPropertyChanged("MLTIN");
					this.OnMLTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLTIN", DbType="NVarChar(50)")]
		public string TLTIN
		{
			get
			{
				return this._TLTIN;
			}
			set
			{
				if ((this._TLTIN != value))
				{
					this.OnTLTINChanging(value);
					this.SendPropertyChanging();
					this._TLTIN = value;
					this.SendPropertyChanged("TLTIN");
					this.OnTLTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITIN_TINTUC", Storage="_TINTUCs", ThisKey="MLTIN", OtherKey="MLTIN")]
		public EntitySet<TINTUC> TINTUCs
		{
			get
			{
				return this._TINTUCs;
			}
			set
			{
				this._TINTUCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.LOAITIN = this;
		}
		
		private void detach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.LOAITIN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHASX")]
	public partial class NHASX : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANSX;
		
		private string _TENNSX;
		
		private string _DIACHI;
		
		private System.Nullable<int> _DIENTHOAI;
		
		private EntitySet<LAPTOP> _LAPTOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANSXChanging(int value);
    partial void OnMANSXChanged();
    partial void OnTENNSXChanging(string value);
    partial void OnTENNSXChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnDIENTHOAIChanging(System.Nullable<int> value);
    partial void OnDIENTHOAIChanged();
    #endregion
		
		public NHASX()
		{
			this._LAPTOPs = new EntitySet<LAPTOP>(new Action<LAPTOP>(this.attach_LAPTOPs), new Action<LAPTOP>(this.detach_LAPTOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANSX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANSX
		{
			get
			{
				return this._MANSX;
			}
			set
			{
				if ((this._MANSX != value))
				{
					this.OnMANSXChanging(value);
					this.SendPropertyChanging();
					this._MANSX = value;
					this.SendPropertyChanged("MANSX");
					this.OnMANSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNSX", DbType="NVarChar(50)")]
		public string TENNSX
		{
			get
			{
				return this._TENNSX;
			}
			set
			{
				if ((this._TENNSX != value))
				{
					this.OnTENNSXChanging(value);
					this.SendPropertyChanging();
					this._TENNSX = value;
					this.SendPropertyChanged("TENNSX");
					this.OnTENNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI", DbType="Int")]
		public System.Nullable<int> DIENTHOAI
		{
			get
			{
				return this._DIENTHOAI;
			}
			set
			{
				if ((this._DIENTHOAI != value))
				{
					this.OnDIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI = value;
					this.SendPropertyChanged("DIENTHOAI");
					this.OnDIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASX_LAPTOP", Storage="_LAPTOPs", ThisKey="MANSX", OtherKey="MANSX")]
		public EntitySet<LAPTOP> LAPTOPs
		{
			get
			{
				return this._LAPTOPs;
			}
			set
			{
				this._LAPTOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LAPTOPs(LAPTOP entity)
		{
			this.SendPropertyChanging();
			entity.NHASX = this;
		}
		
		private void detach_LAPTOPs(LAPTOP entity)
		{
			this.SendPropertyChanging();
			entity.NHASX = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINHTRANGMAY")]
	public partial class TINHTRANGMAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATINHTRANG;
		
		private string _TENTINHTRANG;
		
		private EntitySet<LAPTOP> _LAPTOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATINHTRANGChanging(int value);
    partial void OnMATINHTRANGChanged();
    partial void OnTENTINHTRANGChanging(string value);
    partial void OnTENTINHTRANGChanged();
    #endregion
		
		public TINHTRANGMAY()
		{
			this._LAPTOPs = new EntitySet<LAPTOP>(new Action<LAPTOP>(this.attach_LAPTOPs), new Action<LAPTOP>(this.detach_LAPTOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATINHTRANG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MATINHTRANG
		{
			get
			{
				return this._MATINHTRANG;
			}
			set
			{
				if ((this._MATINHTRANG != value))
				{
					this.OnMATINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._MATINHTRANG = value;
					this.SendPropertyChanged("MATINHTRANG");
					this.OnMATINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTINHTRANG", DbType="NVarChar(50)")]
		public string TENTINHTRANG
		{
			get
			{
				return this._TENTINHTRANG;
			}
			set
			{
				if ((this._TENTINHTRANG != value))
				{
					this.OnTENTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TENTINHTRANG = value;
					this.SendPropertyChanged("TENTINHTRANG");
					this.OnTENTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTRANGMAY_LAPTOP", Storage="_LAPTOPs", ThisKey="MATINHTRANG", OtherKey="MATINHTRANG")]
		public EntitySet<LAPTOP> LAPTOPs
		{
			get
			{
				return this._LAPTOPs;
			}
			set
			{
				this._LAPTOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LAPTOPs(LAPTOP entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANGMAY = this;
		}
		
		private void detach_LAPTOPs(LAPTOP entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANGMAY = null;
		}
	}
}
#pragma warning restore 1591
